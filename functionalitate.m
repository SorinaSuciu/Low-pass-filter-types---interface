function functionalitate(R,C)
Fig=figure('Name','Functionmalitatea filtrului RC Trece Jos',...
           'Units','normalized',...
           'Position',[0.1 0.2 0.8 0.7],...
           'color',[0.93 0.91 0.8],...
           'NumberTitle','off');
 rt=uicontrol('Style','text',... 
        'Units','normalized',...
        'Position',[0.1 0.1 0.15 0.07],...
        'BackgroundColor',[194/255, 199/255, 145/255],....
        'foregroundcolor','black',...
        'FontSize',15,...
        'String','R[KΩ]',...
        'FontWeight','Bold');
re=uicontrol('Style','edit',...
        'Units','normalized',...
        'Position',[0.1 0.05 0.15 0.07],...
        'FontSize',15,...
        'BackgroundColor',[194/255, 199/255, 145/255],...
        'String', R,...
        'FontWeight','Bold',...
        'Callback','R=str2num(get(gco,''String'')),functionalitate(R,C)');
  
%   Valoare capacitate
ct=uicontrol('Style','text',... 
        'Units','normalized',...
        'Position',[0.3 0.1 0.15 0.07],...
       'BackgroundColor',[194/255, 199/255, 145/255],...
        'foregroundcolor','black',...
        'FontSize',15,...
        'FontWeight','Bold',...
        'String','C[μF]');
ce=uicontrol('Style','edit',...
        'Units','normalized',...
        'Position',[0.3 0.05 0.15 0.07],...
        'FontSize',15,...
        'BackgroundColor',[194/255, 199/255, 145/255],...
        'String', C,...
        'FontWeight','Bold',...
        'Callback','C=str2num(get(gco,''String'')),functionalitate(R,C)');
fs = 1000;    %frecvența de eșantionare 1000/s, Hz
dur_sec = 1;   %durata semnalului 1, secunde
t_sec = (0:(dur_sec*fs)-1)/fs;  %vectorul de timp cu durata 1 si f esantionare 1000
freq_Hz = 20;  % frecvența semnalului, Hz
y = sin(2*pi*freq_Hz*t_sec);  %generarea semnalului sinus
N = 1;  %filtru trece jos de ordin 1
f0 = 1/(2*pi*R*C);
%calcularea coeficienților
wc = 2 * pi * f0 / fs;  %frecvența de tăiere raportata la fes
a = [1, -exp(-wc)];  %pol,-exp partea imag
b = (1 - exp(-wc)) * [1, 1];  % Coeficienții din numărător

% Aplicare filtru
y_filt = filter(b, a, y);

% Afișare rezultate

subplot(2,1,1)
plot(t_sec, y, t_sec, y_filt);
xlabel('Timp (secunde)');
ylabel('Amplitudine');
% ylim([-1 1]);
legend('Semnal brut', 'Semnal filtrat');
title('Filtru trece-jos RC');